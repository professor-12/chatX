// Author Badejo Emmanuel Adewale
// Email badejoemmanuel805@gmail.com
// Phone number: +2347041987125

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url     =  env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  
}


model User {
  id String @map("_id") @id @default(cuid())
  name String
  email String @unique
  password String? 
  validated Boolean @default(false)
  createdAt DateTime @default(now())
  accounts Account[]
  profile Profile?
  sessions Session[]
  subscriptions Subscription[]
  messagesent Message[] @relation("sender")
  messagereceived Message[] @relation("receiver")

  admin Group[] @relation(name: "admin")
  groupMember Group[] @relation(name: "groupMember")
  Contacts Contact[] @relation(name: "userRelation")
  usercontact Contact[] @relation(name: "contactRelation")
  groupCreatedBy Group[] @relation(name: "groupCreatedBy")
  
}

model Group {
  id String @map("_id") @id @default(cuid())  
  name String
  description String?
  admin User[] @relation(name: "admin")
  groupPics String? @default("https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRony1PUEAFW_rKWuriSeChlMZK05SNCoyhblOQpH5tBq1m5C_HHsKEJvveSdHRdSj_zJ4&usqp=CAU")
  message Message[] @relation(name: "groupMessage")
  members User[] @relation(name: "groupMember")
  creatorId String
  creator User @relation(name: "groupCreatedBy", fields: [creatorId], references: [id])
  createdAt DateTime
}

model Account {
  id String @map("_id") @id @default(cuid()) 
  providerName String
  providerId String
  refresh_token String?
  access_token String?
  userId String
  user User @relation(references: [id],fields: [userId])
  
}

model Session {
  id String @map("_id") @id @default(cuid())
  userId      String 
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  expiresAt   DateTime
  createdAt   DateTime @default(now())
  @@index([userId]) 

}

model Profile {
  id String @map("_id") @id @default(cuid())
  username String?
  address String?
  profilePics String? @default("https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRony1PUEAFW_rKWuriSeChlMZK05SNCoyhblOQpH5tBq1m5C_HHsKEJvveSdHRdSj_zJ4&usqp=CAU")
  phoneNumber String?
  gender Gender?
  userId String @unique
  user User @relation(fields: [userId],references: [id])
}

enum  Gender {
  MALE 
  FEMALE
}


model Subscription {
  id String @id @default(cuid())
  value String
  userId String
  user User @relation(fields: [userId], references: [id])
}

model Message {
  id String @map("_id") @id @default(cuid())
  senderId String
  receiverId String?
  picture String?
  message String?
  createdAt DateTime @default(now())
  editedAt DateTime?
  sender User @relation(fields: [senderId], references: [id],name: "sender")
  receiver User? @relation(fields: [receiverId], references: [id],name: "receiver")
  groupId String?
  group Group? @relation(fields: [groupId], references: [id], name: "groupMessage")
}

model Contact {
  id String @map("_id") @id @default(cuid())
  userId String 
  name String?
  contactId String 
  contact User @relation(fields: [contactId], references: [id], name: "contactRelation")
  user User @relation(fields: [userId], references: [id], name: "userRelation")
}


